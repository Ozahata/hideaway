{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "plugins": ["@typescript-eslint", "react", "react-hooks", "jest", "prettier"],
  "rules": {
    "@typescript-eslint/explicit-function-return-type": "off", // annoying to force return type
    "@typescript-eslint/interface-name-prefix": ["error", "always"], // interface prefix with "I"
    "import/extensions": "off", // Allow to use ..
    "import/prefer-default-export": "off", // Allow single Named-export
    "react/jsx-filename-extension": [
      "warn",
      {
        "extensions": [".tsx"] // also want to use with ".tsx"
      }
    ],
    "react/jsx-uses-react": "error",
    "react/jsx-uses-vars": "error",
    "react/prop-types": "off", // Is this incompatible with TS props type?
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "no-console": ["error", { "allow": ["warn", "error"] }] // only allow console.(warn, error)
  },
  "extends": [
    "airbnb",
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended", // uses typescript-specific linting rules
    "plugin:@typescript-eslint/recommended", // uses react-specific linting rules
    "plugin:react/recommended",
    "plugin:prettier/recommended", // Enables eslint-plugin-prettier and eslint-config-prettier. This will display prettier errors as ESLint errors. Make sure this is always the last configuration in the extends array.
    "prettier/flowtype",
    "prettier/react", // disables react-specific linting rules that conflict with prettier
    "prettier/standard",
    "prettier/@typescript-eslint", // Uses eslint-config-prettier to disable ESLint rules from @typescript-eslint/eslint-plugin that would conflict with prettier
    "plugin:import/typescript" // Allow to use ..
  ],
  "settings": {
    "import/resolver": {
      "node": {
        "moduleDirectory": ["node_modules", "src"]
      }
    }
  }
}
